// source: txData/notification.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.push.EncryptedNotif', null, global);
goog.exportSymbol('proto.push.EncryptionDetails', null, global);
goog.exportSymbol('proto.push.EncryptionType', null, global);
goog.exportSymbol('proto.push.Notification', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.push.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.push.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.push.Notification.displayName = 'proto.push.Notification';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.push.EncryptionDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.push.EncryptionDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.push.EncryptionDetails.displayName = 'proto.push.EncryptionDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.push.EncryptedNotif = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.push.EncryptedNotif.repeatedFields_, null);
};
goog.inherits(proto.push.EncryptedNotif, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.push.EncryptedNotif.displayName = 'proto.push.EncryptedNotif';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.push.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.push.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.push.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    app: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    body: jspb.Message.getFieldWithDefault(msg, 3, ""),
    channelurl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    actionurl: jspb.Message.getFieldWithDefault(msg, 5, ""),
    img: jspb.Message.getFieldWithDefault(msg, 6, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.push.Notification}
 */
proto.push.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.push.Notification;
  return proto.push.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.push.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.push.Notification}
 */
proto.push.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApp(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannelurl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setActionurl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setImg(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.push.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.push.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.push.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApp();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChannelurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActionurl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getImg();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string app = 1;
 * @return {string}
 */
proto.push.Notification.prototype.getApp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setApp = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.push.Notification.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string body = 3;
 * @return {string}
 */
proto.push.Notification.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string channelUrl = 4;
 * @return {string}
 */
proto.push.Notification.prototype.getChannelurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setChannelurl = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string actionUrl = 5;
 * @return {string}
 */
proto.push.Notification.prototype.getActionurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setActionurl = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string img = 6;
 * @return {string}
 */
proto.push.Notification.prototype.getImg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setImg = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string icon = 7;
 * @return {string}
 */
proto.push.Notification.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.Notification} returns this
 */
proto.push.Notification.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.push.EncryptionDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.push.EncryptionDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.push.EncryptionDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.EncryptionDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientdid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    keyindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    encryptedsecret: msg.getEncryptedsecret_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.push.EncryptionDetails}
 */
proto.push.EncryptionDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.push.EncryptionDetails;
  return proto.push.EncryptionDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.push.EncryptionDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.push.EncryptionDetails}
 */
proto.push.EncryptionDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientdid(value);
      break;
    case 2:
      var value = /** @type {!proto.push.EncryptionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKeyindex(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptedsecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.push.EncryptionDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.push.EncryptionDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.push.EncryptionDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.EncryptionDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientdid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getKeyindex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEncryptedsecret_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string recipientDID = 1;
 * @return {string}
 */
proto.push.EncryptionDetails.prototype.getRecipientdid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.push.EncryptionDetails} returns this
 */
proto.push.EncryptionDetails.prototype.setRecipientdid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional EncryptionType type = 2;
 * @return {!proto.push.EncryptionType}
 */
proto.push.EncryptionDetails.prototype.getType = function() {
  return /** @type {!proto.push.EncryptionType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.push.EncryptionType} value
 * @return {!proto.push.EncryptionDetails} returns this
 */
proto.push.EncryptionDetails.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 keyIndex = 3;
 * @return {number}
 */
proto.push.EncryptionDetails.prototype.getKeyindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.push.EncryptionDetails} returns this
 */
proto.push.EncryptionDetails.prototype.setKeyindex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes encryptedSecret = 4;
 * @return {!(string|Uint8Array)}
 */
proto.push.EncryptionDetails.prototype.getEncryptedsecret = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encryptedSecret = 4;
 * This is a type-conversion wrapper around `getEncryptedsecret()`
 * @return {string}
 */
proto.push.EncryptionDetails.prototype.getEncryptedsecret_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptedsecret()));
};


/**
 * optional bytes encryptedSecret = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptedsecret()`
 * @return {!Uint8Array}
 */
proto.push.EncryptionDetails.prototype.getEncryptedsecret_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptedsecret()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.push.EncryptionDetails} returns this
 */
proto.push.EncryptionDetails.prototype.setEncryptedsecret = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.push.EncryptedNotif.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.push.EncryptedNotif.prototype.toObject = function(opt_includeInstance) {
  return proto.push.EncryptedNotif.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.push.EncryptedNotif} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.EncryptedNotif.toObject = function(includeInstance, msg) {
  var f, obj = {
    encryptednotif: msg.getEncryptednotif_asB64(),
    sourceenc: (f = msg.getSourceenc()) && proto.push.EncryptionDetails.toObject(includeInstance, f),
    targetencList: jspb.Message.toObjectList(msg.getTargetencList(),
    proto.push.EncryptionDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.push.EncryptedNotif}
 */
proto.push.EncryptedNotif.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.push.EncryptedNotif;
  return proto.push.EncryptedNotif.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.push.EncryptedNotif} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.push.EncryptedNotif}
 */
proto.push.EncryptedNotif.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncryptednotif(value);
      break;
    case 2:
      var value = new proto.push.EncryptionDetails;
      reader.readMessage(value,proto.push.EncryptionDetails.deserializeBinaryFromReader);
      msg.setSourceenc(value);
      break;
    case 3:
      var value = new proto.push.EncryptionDetails;
      reader.readMessage(value,proto.push.EncryptionDetails.deserializeBinaryFromReader);
      msg.addTargetenc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.push.EncryptedNotif.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.push.EncryptedNotif.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.push.EncryptedNotif} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.push.EncryptedNotif.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncryptednotif_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSourceenc();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.push.EncryptionDetails.serializeBinaryToWriter
    );
  }
  f = message.getTargetencList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.push.EncryptionDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes encryptedNotif = 1;
 * @return {!(string|Uint8Array)}
 */
proto.push.EncryptedNotif.prototype.getEncryptednotif = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes encryptedNotif = 1;
 * This is a type-conversion wrapper around `getEncryptednotif()`
 * @return {string}
 */
proto.push.EncryptedNotif.prototype.getEncryptednotif_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncryptednotif()));
};


/**
 * optional bytes encryptedNotif = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncryptednotif()`
 * @return {!Uint8Array}
 */
proto.push.EncryptedNotif.prototype.getEncryptednotif_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncryptednotif()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.push.EncryptedNotif} returns this
 */
proto.push.EncryptedNotif.prototype.setEncryptednotif = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional EncryptionDetails sourceEnc = 2;
 * @return {?proto.push.EncryptionDetails}
 */
proto.push.EncryptedNotif.prototype.getSourceenc = function() {
  return /** @type{?proto.push.EncryptionDetails} */ (
    jspb.Message.getWrapperField(this, proto.push.EncryptionDetails, 2));
};


/**
 * @param {?proto.push.EncryptionDetails|undefined} value
 * @return {!proto.push.EncryptedNotif} returns this
*/
proto.push.EncryptedNotif.prototype.setSourceenc = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.push.EncryptedNotif} returns this
 */
proto.push.EncryptedNotif.prototype.clearSourceenc = function() {
  return this.setSourceenc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.push.EncryptedNotif.prototype.hasSourceenc = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated EncryptionDetails targetEnc = 3;
 * @return {!Array<!proto.push.EncryptionDetails>}
 */
proto.push.EncryptedNotif.prototype.getTargetencList = function() {
  return /** @type{!Array<!proto.push.EncryptionDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.push.EncryptionDetails, 3));
};


/**
 * @param {!Array<!proto.push.EncryptionDetails>} value
 * @return {!proto.push.EncryptedNotif} returns this
*/
proto.push.EncryptedNotif.prototype.setTargetencList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.push.EncryptionDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.push.EncryptionDetails}
 */
proto.push.EncryptedNotif.prototype.addTargetenc = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.push.EncryptionDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.push.EncryptedNotif} returns this
 */
proto.push.EncryptedNotif.prototype.clearTargetencList = function() {
  return this.setTargetencList([]);
};


/**
 * @enum {number}
 */
proto.push.EncryptionType = {
  ENCRYPTION_UNSPECIFIED: 0,
  ECC: 1
};

goog.object.extend(exports, proto.push);
